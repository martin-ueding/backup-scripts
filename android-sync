#!/bin/bash
# Copyright Â© 2013-2014 Martin Ueding <dev@martin-ueding.de>

# Main function of this script.
main() {
    local full_ip_regex='^ *([[:digit:]]{1,3})\.([[:digit:]]{1,3})\.([[:digit:]]{1,3})\.([[:digit:]]{1,3}) *.*$'
    local ip
    local own_ip="$(hostname -I)"
    local partial_ip_regex='^([[:digit:]]{1,3})$'
    local subnet

    cd "$HOME"

    gather-colorcodes

    if [[ "$own_ip" =~ $full_ip_regex ]]
    then
        subnet="${BASH_REMATCH[1]}.${BASH_REMATCH[2]}.${BASH_REMATCH[3]}"
    fi

    if [[ "${1:-}" =~ $full_ip_regex ]]
    then
        ip="$1"
    elif [[ "${1:-}" =~ $partial_ip_regex ]]
    then
        ip="$subnet.$1"
    elif ips="$(find-sshelper)"
    then
        echo "avahi: $ips"
        for ip in $ips
        do
            sync-device "$ip"
        done
    else
        echo $"Usage: $0 IP"
        exit 2
    fi

    if [[ -n "$ip" ]]
    then
        sync-device "$ip"
    else
        echo "No IP address found"
    fi
}

# Checks whether the given host is reachable.
#
# Positional arguments:
#   IP              IP address to check
#
# Exit status:
#   the exit status of ping
ping-test() {
    ping -c 1 -w 5 "$1" &> /dev/null
}

# Stashes the GPX files into the target directory.
#
# Positional arguments
#   DROPFOLDER      Source folder
stash-gpx-files() {
    local dropfolder="$1"
    local gpxfile

    print-heading "Move GPX files into target folder"

    shopt -s nullglob

    for gpxfile in "$dropfolder"/*.gpx
    do
        mv -v "$gpxfile" "$HOME/Dokumente/GPS/"
    done

    (
    cd "$HOME/Dokumente/GPS"
    rename 's/(\d{4})-(\d{2})-(\d{2})_\d{2}-\d{2}-\d{2}[-_](.+\.gpx)/$1$2$3-$4/' *.gpx
    )
}

# Performs the syncing. This functions pretty much calls all other functions.
#
# Positional arguments
#   IP              IP address of the device
sync-device() {
    print-heading $"Copying reading list items onto device"
    myrsync --delete --max-size=1G "$HOME/Leseliste/" "$target/Leseliste"
    myrsync --delete --max-size=1G "$HOME/Dokumente/Wohnung_Monschauer_Strasse" "$target/Dokumente/"

    case "$hostname" in
        "Nexus 10")
            print-heading $"Copy university PDF files to device"
            myrsync --files-from=<(find "${studiumpdfdirs[@]}" -type f -name '*.pdf') "$HOME" "$target/"
            ;;
        "Xperia Mini Pro")
            copy-backupdirs -t "$target" "${backupdirs[@]}"
            copy-music "$target_music"
            ;;
    esac

    print-heading $"Copy PDF files to device"
    myrsync --files-from=<(find "${pdfdirs[@]}" -type f -name '*.pdf') "$HOME" "$target/"

    stash-gpx-files "$dropfolder"
    sync-locus-maps "$target"
    backup-status --update "$hostname"
}
